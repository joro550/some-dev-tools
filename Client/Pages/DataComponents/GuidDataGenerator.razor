@implements DevTools.Client.Data.IDataComponent

<div class='mt-2 mb-3'>
  <div class='relative z-0 mb-6 w-full group'>
      <input @bind='_amountToGenerate' max='1000' type='number' class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " />
      <label class='peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6'>Number to generate</label>
  </div>
</div>

@code {
    private int _amountToGenerate;

    public object GetData()
    {
        _amountToGenerate = _amountToGenerate > 1000 ? 1000 : _amountToGenerate;
        
        var generatedGuids = new List<string>();
        for (var i = 0; i < _amountToGenerate; i++)
        {
            generatedGuids.Add(Guid.NewGuid().ToString());
        }
        return string.Join(", ", generatedGuids);
    }

}