@page "/Cryptography/Md5"
@using System.Security.Cryptography
@using System.Text

<h1 class='mb-6 text-4xl font-bold tracking-tight leading-none text-gray-900 md:text-5xl lg:text-6xl dark:text-white'>
    Md5
</h1>

<p class='mb-8 font-normal text-gray-500 dark:text-white'>
    Md5 hashing function is generally considered defeated - be careful with your use-case 
    <span class='text-bold'>Do not use is to store passwords</span>
</p>


<div class='mt-2 mb-3'>
    <div class='relative z-0 mb-6 w-full group'>
        <input @bind='Input' @bind:event='oninput'  type='text' class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " />
        <label class='peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6'>
            Input
        </label>
    </div>
    
    <div class='relative z-0 mt-3 mb-6 w-full group'>
        <textarea readonly @bind='_output' type='text' style='height: 100px' class='block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer' placeholder=" " >
      </textarea>
        <label class='peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6'>Output</label>
    </div>
</div>

@code{
    private string _input;
    private string _output;

    private string Input
    {
        get => _input;
        set
        {
            _input = value;
            Generate();
        }
    }

    private void Generate() => _output = CreateHash(_input);

    private static string CreateHash(string input)
    {
        var md5 = MD5.Create();
        var inputBytes = Encoding.ASCII.GetBytes(input);
        var hashBytes = md5.ComputeHash(inputBytes);
     
        var sb = new StringBuilder();
        foreach (var t in hashBytes)
        {
            sb.Append(t.ToString("X2"));
        }
        return sb.ToString();
    }
}
